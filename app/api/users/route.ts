import { prisma } from '@/prisma/client';
import { NextResponse } from 'next/server';

// ðŸ”„ GET: pobranie wszystkich uÅ¼ytkownikÃ³w
export async function GET() {
  try {
    const users = await prisma.user.findMany({
      include: { UserType: true },
      orderBy: { id: 'asc' },
    });

    return NextResponse.json(users);
  } catch (error) {
    console.error("BÅ‚Ä…d pobierania uÅ¼ytkownikÃ³w:", error);
    return NextResponse.json({ error: "WewnÄ™trzny bÅ‚Ä…d serwera" }, { status: 500 });
  }
}

// âž• POST: dodanie nowego uÅ¼ytkownika
export async function POST(request: Request) {
  const body = await request.json();
  const { name, userTypeId } = body;

  if (!name || !userTypeId) {
    return NextResponse.json({ error: "Brak wymaganych pÃ³l" }, { status: 400 });
  }

  try {
    const nowyUzytkownik = await prisma.user.create({
      data: {
        name,
        userTypeId: parseInt(userTypeId),
      },
    });

    return NextResponse.json(nowyUzytkownik, { status: 201 });
  } catch (error) {
    console.error("BÅ‚Ä…d dodawania uÅ¼ytkownika:", error);
    return NextResponse.json({ error: "WewnÄ™trzny bÅ‚Ä…d serwera" }, { status: 500 });
  }
}
